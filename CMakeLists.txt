cmake_minimum_required(VERSION 3.8)

# disable testsuite if used via add_subdirectory()
if(NOT DEFINED PROJECT_NAME)
    set(NOT_SUBPROJECT ON)
endif()

project(ApprovalTests.cpp)
add_subdirectory(ApprovalTests)


if (NOT_SUBPROJECT)
    # Download and unpack googletest at configure time
    configure_file(CMakeLists.txt.in googletest-download/CMakeLists.txt)
    execute_process(COMMAND "${CMAKE_COMMAND}" -G "${CMAKE_GENERATOR}" .
            WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/googletest-download" )
    execute_process(COMMAND "${CMAKE_COMMAND}" --build .
            WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/googletest-download" )

    # Prevent GoogleTest from overriding our compiler/linker options
    # when building with Visual Studio
    set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)

    # Add googletest directly to our build. This adds
    # the following targets: gtest, gtest_main, gmock
    # and gmock_main
    add_subdirectory("${CMAKE_BINARY_DIR}/googletest-src"
                     "${CMAKE_BINARY_DIR}/googletest-build")
    include_directories(lib) # for Catch
    
    # sanitizer options
    option(APPROVALS_SANITIZE_ADDRESS "Enable address sanitizer in tests" OFF)

    if (APPROVALS_SANITIZE_ADDRESS)
        set (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
        set (CMAKE_LINKER_FLAGS_DEBUG "${CMAKE_LINKER_FLAGS_DEBUG} -fno-omit-frame-pointer -fsanitize=address")
    endif ()
    
    enable_testing()
    add_subdirectory(ApprovalTests_Catch1_Tests)
    add_subdirectory(ApprovalTests_Catch2_Tests)
    add_subdirectory(ApprovalTests_GoogleTest_Tests)
    add_subdirectory(ApprovalTests_DocTest_Tests)
    add_subdirectory(examples)
endif()
